<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="268c7c94-e77c-4e10-9fe5-4b4a1692d6b1" name="Changes" comment="Did substantial work on the chord suggester. Have now generated three (pretty cool) progressions to play with. Spent a ton of time experimenting with predicting key signatures based strictly on chord progressions. Reached 10/12 success (employing an established algorithm) but wound up going another direction with the chord suggester. Namely, getting key signature info from the internet. Useful learning experiences.">
      <change afterPath="$PROJECT_DIR$/Steam API access/get_Steam_game_list.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Steam API access/get_Steam_games_played_list.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/lyric generator/generate_lyric_from_foot_and_meter.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/lyric generator/generator_2.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/lyric generator/generator_3.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" show_ignored="true" />
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;feothan&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/feothan/python_certification&quot;,
    &quot;accountId&quot;: &quot;b0dd4980-f7f8-467e-8035-89bae97bccbe&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="33RqwYelcEGW3GaLgc0uByBv1yv" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python tests.Python tests in scratch_paper.py.executor": "Run",
    "Python.chord_fingerings.executor": "Run",
    "Python.chord_suggester.executor": "Run",
    "Python.generate_lyric_from_foot_and_meter.executor": "Run",
    "Python.generator_2.executor": "Run",
    "Python.generator_3.executor": "Run",
    "Python.get_Steam_game_list.executor": "Run",
    "Python.get_Steam_games_played_list.executor": "Run",
    "Python.lyric_generator.executor": "Run",
    "Python.scratch_paper.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "C:/Users/mrpet/PycharmProjects/original mini chess & text adventure engine files/Steam API access"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\mrpet\PycharmProjects\original mini chess &amp; text adventure engine files\Steam API access" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\mrpet\PycharmProjects\original mini chess &amp; text adventure engine files\mingus experiments" />
      <recent name="C:\Users\mrpet\PycharmProjects\original mini chess &amp; text adventure engine files\Creative Coding" />
    </key>
  </component>
  <component name="RunManager" selected="Python.generator_3">
    <configuration name="generate_lyric_from_foot_and_meter" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="original mini chess &amp; text adventure engine files" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/lyric generator" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="C:\Users\mrpet\PycharmProjects\original mini chess &amp; text adventure engine files\lyric generator\generate_lyric_from_foot_and_meter.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="generator_2" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="original mini chess &amp; text adventure engine files" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/lyric generator" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/lyric generator/generator_2.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="generator_3" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="original mini chess &amp; text adventure engine files" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/lyric generator" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/lyric generator/generator_3.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="get_Steam_game_list" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="original mini chess &amp; text adventure engine files" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Steam API access" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/Steam API access/get_Steam_game_list.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="get_Steam_games_played_list" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="original mini chess &amp; text adventure engine files" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Steam API access" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/Steam API access/get_Steam_games_played_list.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.generator_3" />
        <item itemvalue="Python.generator_2" />
        <item itemvalue="Python.generate_lyric_from_foot_and_meter" />
        <item itemvalue="Python.get_Steam_games_played_list" />
        <item itemvalue="Python.get_Steam_game_list" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-657d8234b839-64d779b69b7a-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.26927.74" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="268c7c94-e77c-4e10-9fe5-4b4a1692d6b1" name="Changes" comment="Finally figured out how to reconcile the problems I had between my handling of GITHUB in PyCharm and in the browser. Began the process of getting this organized into more of a portfolio." />
      <created>1759290472183</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1759290472183</updated>
    </task>
    <task id="LOCAL-00001" summary="Did substantial work on the chord suggester. Have now generated three (pretty cool) progressions to play with. Spent a ton of time experimenting with predicting key signatures based strictly on chord progressions. Reached 10/12 success (employing an established algorithm) but wound up going another direction with the chord suggester. Namely, getting key signature info from the internet. Useful learning experiences.">
      <option name="closed" value="true" />
      <created>1759585412778</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1759585412778</updated>
    </task>
    <task id="LOCAL-00002" summary="Did substantial work on the chord suggester. Have now generated three (pretty cool) progressions to play with. Spent a ton of time experimenting with predicting key signatures based strictly on chord progressions. Reached 10/12 success (employing an established algorithm) but wound up going another direction with the chord suggester. Namely, getting key signature info from the internet. Useful learning experiences.">
      <option name="closed" value="true" />
      <created>1759585522033</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1759585522033</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Did substantial work on the chord suggester. Have now generated three (pretty cool) progressions to play with. Spent a ton of time experimenting with predicting key signatures based strictly on chord progressions. Reached 10/12 success (employing an established algorithm) but wound up going another direction with the chord suggester. Namely, getting key signature info from the internet. Useful learning experiences." />
    <option name="LAST_COMMIT_MESSAGE" value="Did substantial work on the chord suggester. Have now generated three (pretty cool) progressions to play with. Spent a ton of time experimenting with predicting key signatures based strictly on chord progressions. Reached 10/12 success (employing an established algorithm) but wound up going another direction with the chord suggester. Namely, getting key signature info from the internet. Useful learning experiences." />
  </component>
</project>